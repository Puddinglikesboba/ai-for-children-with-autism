name: Test AI Sandbox System

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        cd backend
        python test_setup.py
    
    - name: Check code quality
      run: |
        cd backend
        python -c "
        import ast
        import os
        
        def check_syntax(file_path):
            try:
                with open(file_path, 'r') as f:
                    ast.parse(f.read())
                return True
            except SyntaxError as e:
                print(f'Syntax error in {file_path}: {e}')
                return False
        
        python_files = []
        for root, dirs, files in os.walk('.'):
            for file in files:
                if file.endswith('.py'):
                    python_files.append(os.path.join(root, file))
        
        all_good = True
        for file_path in python_files:
            if not check_syntax(file_path):
                all_good = False
        
        if not all_good:
            exit(1)
        print('All Python files have valid syntax!')
        " 
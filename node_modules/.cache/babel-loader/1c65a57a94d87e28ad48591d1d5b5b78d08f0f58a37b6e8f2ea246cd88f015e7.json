{"ast":null,"code":"var _jsxFileName = \"/Users/dahuayi/Desktop/ai-for-children-with-autism/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState('start'); // 'start', 'playing', 'roundEnd'\n  const [currentRound, setCurrentRound] = useState(1);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [currentEmotion, setCurrentEmotion] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [options, setOptions] = useState([]);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const emotions = ['happy', 'sad', 'angry', 'surprised', 'neutral'];\n  const questionsPerRound = 5;\n\n  // Generate random options including the correct answer\n  const generateOptions = correctEmotion => {\n    const otherEmotions = emotions.filter(emotion => emotion !== correctEmotion);\n    const shuffledOthers = otherEmotions.sort(() => Math.random() - 0.5).slice(0, 4);\n    const allOptions = [...shuffledOthers, correctEmotion];\n    return allOptions.sort(() => Math.random() - 0.5);\n  };\n\n  // Start a new round\n  const startRound = () => {\n    setGameState('playing');\n    setCurrentQuestion(0);\n    setScore(0);\n    setSelectedAnswer(null);\n    setIsCorrect(null);\n    setError('');\n    generateNewQuestion();\n  };\n\n  // Generate a new question\n  const generateNewQuestion = async () => {\n    setIsLoading(true);\n    setError('');\n    try {\n      // Randomly select an emotion\n      const randomEmotion = emotions[Math.floor(Math.random() * emotions.length)];\n      setCurrentEmotion(randomEmotion);\n\n      // Fetch image from API\n      const imageResponse = await fetch(`http://nanalab.ai:8080/get_image/${randomEmotion}`);\n      if (!imageResponse.ok) {\n        throw new Error('Failed to fetch image');\n      }\n\n      // For demo purposes, we'll use a placeholder image since the API might not be available\n      // In production, you would use: setImageUrl(imageResponse.url);\n      setImageUrl(`https://via.placeholder.com/400x300/0ea5e9/ffffff?text=${randomEmotion}`);\n\n      // Generate options\n      const questionOptions = generateOptions(randomEmotion);\n      setOptions(questionOptions);\n    } catch (err) {\n      setError('Failed to load image. Please try again.');\n      console.error('Error generating question:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle answer selection\n  const handleAnswerSelect = selectedEmotion => {\n    if (selectedAnswer !== null) return; // Prevent multiple selections\n\n    setSelectedAnswer(selectedEmotion);\n    const correct = selectedEmotion === currentEmotion;\n    setIsCorrect(correct);\n    if (correct) {\n      setScore(prev => prev + 1);\n    }\n  };\n\n  // Move to next question\n  const nextQuestion = () => {\n    const nextQuestionIndex = currentQuestion + 1;\n    if (nextQuestionIndex >= questionsPerRound) {\n      // Round finished\n      endRound();\n    } else {\n      // Move to next question\n      setCurrentQuestion(nextQuestionIndex);\n      setSelectedAnswer(null);\n      setIsCorrect(null);\n      generateNewQuestion();\n    }\n  };\n\n  // End the round\n  const endRound = async () => {\n    setGameState('roundEnd');\n\n    // Save score to backend\n    try {\n      const response = await fetch('/save_score', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          round: currentRound,\n          score: score\n        })\n      });\n      if (!response.ok) {\n        console.error('Failed to save score');\n      }\n    } catch (err) {\n      console.error('Error saving score:', err);\n    }\n  };\n\n  // Start a new round\n  const startNewRound = () => {\n    setCurrentRound(prev => prev + 1);\n    startRound();\n  };\n\n  // Render start screen\n  if (gameState === 'start') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-8 max-w-md w-full mx-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-center text-gray-800 mb-6\",\n          children: \"\\uD83D\\uDE0A Emotion Recognition Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 text-center mb-8\",\n          children: \"Practice identifying emotions with AI-generated images!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startRound,\n          className: \"w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold py-3 px-6 rounded-lg transition-colors\",\n          children: \"Start Round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render round end screen\n  if (gameState === 'roundEnd') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-8 max-w-md w-full mx-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-center text-gray-800 mb-6\",\n          children: \"Round Complete! \\uD83C\\uDF89\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-2xl font-bold text-blue-600 mb-2\",\n            children: [\"Score: \", score, \"/\", questionsPerRound]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: [\"Round \", currentRound]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startNewRound,\n          className: \"w-full bg-green-500 hover:bg-green-600 text-white font-semibold py-3 px-6 rounded-lg transition-colors\",\n          children: \"Start New Round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render game screen\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6 mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold text-gray-800\",\n            children: \"Emotion Recognition Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: [\"Round \", currentRound]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg font-semibold text-blue-600\",\n              children: [\"Question \", currentQuestion + 1, \"/\", questionsPerRound]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600\",\n              children: [\"Score: \", score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-800 mb-4 text-center\",\n          children: \"What emotion is this person showing?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center h-64\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            alt: \"Emotion to identify\",\n            className: \"max-w-full h-64 object-contain rounded-lg border-2 border-gray-200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: options.map((emotion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAnswerSelect(emotion),\n            disabled: selectedAnswer !== null || isLoading,\n            className: `\n                  p-4 rounded-lg font-semibold transition-all\n                  ${selectedAnswer === null ? 'bg-gray-100 hover:bg-gray-200 text-gray-800' : selectedAnswer === emotion ? emotion === currentEmotion ? 'bg-green-500 text-white' : 'bg-red-500 text-white' : emotion === currentEmotion ? 'bg-green-500 text-white' : 'bg-gray-100 text-gray-600'}\n                  ${selectedAnswer !== null ? 'cursor-default' : 'cursor-pointer'}\n                `,\n            children: emotion.charAt(0).toUpperCase() + emotion.slice(1)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), selectedAnswer !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6 text-center\",\n          children: [isCorrect ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-600 font-semibold text-lg\",\n            children: \"\\u2705 Correct!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-600 font-semibold text-lg\",\n            children: [\"\\u274C Incorrect. The correct answer was: \", currentEmotion.charAt(0).toUpperCase() + currentEmotion.slice(1)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: nextQuestion,\n            className: \"mt-4 bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-6 rounded-lg transition-colors\",\n            children: currentQuestion + 1 >= questionsPerRound ? 'Finish Round' : 'Next Question'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SwchMjjwptgaQzXipoUVquxSErk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","gameState","setGameState","currentRound","setCurrentRound","currentQuestion","setCurrentQuestion","score","setScore","currentEmotion","setCurrentEmotion","imageUrl","setImageUrl","options","setOptions","selectedAnswer","setSelectedAnswer","isCorrect","setIsCorrect","isLoading","setIsLoading","error","setError","emotions","questionsPerRound","generateOptions","correctEmotion","otherEmotions","filter","emotion","shuffledOthers","sort","Math","random","slice","allOptions","startRound","generateNewQuestion","randomEmotion","floor","length","imageResponse","fetch","ok","Error","questionOptions","err","console","handleAnswerSelect","selectedEmotion","correct","prev","nextQuestion","nextQuestionIndex","endRound","response","method","headers","body","JSON","stringify","round","startNewRound","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","map","index","disabled","charAt","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/dahuayi/Desktop/ai-for-children-with-autism/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [gameState, setGameState] = useState('start'); // 'start', 'playing', 'roundEnd'\n  const [currentRound, setCurrentRound] = useState(1);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n  const [currentEmotion, setCurrentEmotion] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [options, setOptions] = useState([]);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const emotions = ['happy', 'sad', 'angry', 'surprised', 'neutral'];\n  const questionsPerRound = 5;\n\n  // Generate random options including the correct answer\n  const generateOptions = (correctEmotion) => {\n    const otherEmotions = emotions.filter(emotion => emotion !== correctEmotion);\n    const shuffledOthers = otherEmotions.sort(() => Math.random() - 0.5).slice(0, 4);\n    const allOptions = [...shuffledOthers, correctEmotion];\n    return allOptions.sort(() => Math.random() - 0.5);\n  };\n\n  // Start a new round\n  const startRound = () => {\n    setGameState('playing');\n    setCurrentQuestion(0);\n    setScore(0);\n    setSelectedAnswer(null);\n    setIsCorrect(null);\n    setError('');\n    generateNewQuestion();\n  };\n\n  // Generate a new question\n  const generateNewQuestion = async () => {\n    setIsLoading(true);\n    setError('');\n    \n    try {\n      // Randomly select an emotion\n      const randomEmotion = emotions[Math.floor(Math.random() * emotions.length)];\n      setCurrentEmotion(randomEmotion);\n      \n      // Fetch image from API\n      const imageResponse = await fetch(`http://nanalab.ai:8080/get_image/${randomEmotion}`);\n      if (!imageResponse.ok) {\n        throw new Error('Failed to fetch image');\n      }\n      \n      // For demo purposes, we'll use a placeholder image since the API might not be available\n      // In production, you would use: setImageUrl(imageResponse.url);\n      setImageUrl(`https://via.placeholder.com/400x300/0ea5e9/ffffff?text=${randomEmotion}`);\n      \n      // Generate options\n      const questionOptions = generateOptions(randomEmotion);\n      setOptions(questionOptions);\n      \n    } catch (err) {\n      setError('Failed to load image. Please try again.');\n      console.error('Error generating question:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle answer selection\n  const handleAnswerSelect = (selectedEmotion) => {\n    if (selectedAnswer !== null) return; // Prevent multiple selections\n    \n    setSelectedAnswer(selectedEmotion);\n    const correct = selectedEmotion === currentEmotion;\n    setIsCorrect(correct);\n    \n    if (correct) {\n      setScore(prev => prev + 1);\n    }\n  };\n\n  // Move to next question\n  const nextQuestion = () => {\n    const nextQuestionIndex = currentQuestion + 1;\n    \n    if (nextQuestionIndex >= questionsPerRound) {\n      // Round finished\n      endRound();\n    } else {\n      // Move to next question\n      setCurrentQuestion(nextQuestionIndex);\n      setSelectedAnswer(null);\n      setIsCorrect(null);\n      generateNewQuestion();\n    }\n  };\n\n  // End the round\n  const endRound = async () => {\n    setGameState('roundEnd');\n    \n    // Save score to backend\n    try {\n      const response = await fetch('/save_score', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          round: currentRound,\n          score: score\n        })\n      });\n      \n      if (!response.ok) {\n        console.error('Failed to save score');\n      }\n    } catch (err) {\n      console.error('Error saving score:', err);\n    }\n  };\n\n  // Start a new round\n  const startNewRound = () => {\n    setCurrentRound(prev => prev + 1);\n    startRound();\n  };\n\n  // Render start screen\n  if (gameState === 'start') {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center\">\n        <div className=\"bg-white rounded-lg shadow-lg p-8 max-w-md w-full mx-4\">\n          <h1 className=\"text-3xl font-bold text-center text-gray-800 mb-6\">\n            😊 Emotion Recognition Game\n          </h1>\n          <p className=\"text-gray-600 text-center mb-8\">\n            Practice identifying emotions with AI-generated images!\n          </p>\n          <button\n            onClick={startRound}\n            className=\"w-full bg-blue-500 hover:bg-blue-600 text-white font-semibold py-3 px-6 rounded-lg transition-colors\"\n          >\n            Start Round\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Render round end screen\n  if (gameState === 'roundEnd') {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center\">\n        <div className=\"bg-white rounded-lg shadow-lg p-8 max-w-md w-full mx-4\">\n          <h1 className=\"text-3xl font-bold text-center text-gray-800 mb-6\">\n            Round Complete! 🎉\n          </h1>\n          <div className=\"text-center mb-8\">\n            <p className=\"text-2xl font-bold text-blue-600 mb-2\">\n              Score: {score}/{questionsPerRound}\n            </p>\n            <p className=\"text-gray-600\">\n              Round {currentRound}\n            </p>\n          </div>\n          <button\n            onClick={startNewRound}\n            className=\"w-full bg-green-500 hover:bg-green-600 text-white font-semibold py-3 px-6 rounded-lg transition-colors\"\n          >\n            Start New Round\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Render game screen\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\">\n      <div className=\"max-w-4xl mx-auto px-4\">\n        {/* Header */}\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\n          <div className=\"flex justify-between items-center\">\n            <h1 className=\"text-2xl font-bold text-gray-800\">\n              Emotion Recognition Game\n            </h1>\n            <div className=\"text-right\">\n              <p className=\"text-sm text-gray-600\">Round {currentRound}</p>\n              <p className=\"text-lg font-semibold text-blue-600\">\n                Question {currentQuestion + 1}/{questionsPerRound}\n              </p>\n              <p className=\"text-sm text-gray-600\">Score: {score}</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Error Message */}\n        {error && (\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6\">\n            {error}\n          </div>\n        )}\n\n        {/* Image Display */}\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\n          <h2 className=\"text-xl font-semibold text-gray-800 mb-4 text-center\">\n            What emotion is this person showing?\n          </h2>\n          \n          {isLoading ? (\n            <div className=\"flex justify-center items-center h-64\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500\"></div>\n            </div>\n          ) : (\n            <div className=\"flex justify-center\">\n              <img\n                src={imageUrl}\n                alt=\"Emotion to identify\"\n                className=\"max-w-full h-64 object-contain rounded-lg border-2 border-gray-200\"\n              />\n            </div>\n          )}\n        </div>\n\n        {/* Answer Options */}\n        <div className=\"bg-white rounded-lg shadow-lg p-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {options.map((emotion, index) => (\n              <button\n                key={index}\n                onClick={() => handleAnswerSelect(emotion)}\n                disabled={selectedAnswer !== null || isLoading}\n                className={`\n                  p-4 rounded-lg font-semibold transition-all\n                  ${selectedAnswer === null\n                    ? 'bg-gray-100 hover:bg-gray-200 text-gray-800'\n                    : selectedAnswer === emotion\n                    ? emotion === currentEmotion\n                      ? 'bg-green-500 text-white'\n                      : 'bg-red-500 text-white'\n                    : emotion === currentEmotion\n                    ? 'bg-green-500 text-white'\n                    : 'bg-gray-100 text-gray-600'\n                  }\n                  ${selectedAnswer !== null ? 'cursor-default' : 'cursor-pointer'}\n                `}\n              >\n                {emotion.charAt(0).toUpperCase() + emotion.slice(1)}\n              </button>\n            ))}\n          </div>\n\n          {/* Feedback */}\n          {selectedAnswer !== null && (\n            <div className=\"mt-6 text-center\">\n              {isCorrect ? (\n                <p className=\"text-green-600 font-semibold text-lg\">✅ Correct!</p>\n              ) : (\n                <p className=\"text-red-600 font-semibold text-lg\">\n                  ❌ Incorrect. The correct answer was: {currentEmotion.charAt(0).toUpperCase() + currentEmotion.slice(1)}\n                </p>\n              )}\n              \n              <button\n                onClick={nextQuestion}\n                className=\"mt-4 bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-6 rounded-lg transition-colors\"\n              >\n                {currentQuestion + 1 >= questionsPerRound ? 'Finish Round' : 'Next Question'}\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}